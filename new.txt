Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

PS C:\Users\Marcus> cd Desktop
PS C:\Users\Marcus\Desktop> cd "Share Folder"
PS C:\Users\Marcus\Desktop\Share Folder> mkdir test_repo


    Directory: C:\Users\Marcus\Desktop\Share Folder


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----          9/9/2023   8:22 PM                test_repo


PS C:\Users\Marcus\Desktop\Share Folder> cd test_repo
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git init
Initialized empty Git repository in C:/Users/Marcus/Desktop/Share Folder/test_repo/.git/
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add readme.md
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   readme.md

PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit -m "added readme.md"
[master (root-commit) 7bc0363] added readme.md
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 readme.md
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
nothing to commit, working tree clean
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   readme.md

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   readme.md

PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit - "change 1"
error: pathspec '-' did not match any file(s) known to git
error: pathspec 'change 1' did not match any file(s) known to git
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit -m "change 1"
[master d91bc37] change 1
 1 file changed, 4 insertions(+)
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
nothing to commit, working tree clean
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
nothing to commit, working tree clean
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   readme.md

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   readme.md

PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit -m "deleted empty lines"
[master 8d048e1] deleted empty lines
 1 file changed, 1 insertion(+), 2 deletions(-)
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git checkout -b
error: switch `b' requires a value
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git chekkout -b new
git: 'chekkout' is not a git command. See 'git --help'.

The most similar command is
        checkout
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git checkout -b new
Switched to a new branch 'new'
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch new
nothing to commit, working tree clean
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch new
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   readme.md

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch new
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   readme.md

PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit -m "first commit on new branch"
[new 80fb66d] first commit on new branch
 1 file changed, 3 insertions(+), 1 deletion(-)
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git checkout master
Switched to branch 'master'
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test.py

nothing added to commit but untracked files present (use "git add" to track)
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   test.py

PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit -m "added test.py to master"
[master c2926c5] added test.py to master
 1 file changed, 1 insertion(+)
 create mode 100644 test.py
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git chekcout new
git: 'chekcout' is not a git command. See 'git --help'.

The most similar command is
        checkout
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git checkout new
Switched to branch 'new'
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git merge master
Merge made by the 'ort' strategy.
 test.py | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 test.py
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git remote add origin https://github.com/judahwo/test_.git
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git checkout master
Switched to branch 'master'
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git push -u origin master
Enumerating objects: 12, done.
Counting objects: 100% (12/12), done.
Delta compression using up to 12 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (12/12), 928 bytes | 928.00 KiB/s, done.
Total 12 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/judahwo/test_.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git pull origin master
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 692 bytes | 230.00 KiB/s, done.
From https://github.com/judahwo/test_
 * branch            master     -> FETCH_HEAD
   c2926c5..81b6e8a  master     -> origin/master
Updating c2926c5..81b6e8a
Fast-forward
 readme.md | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git pull origin master
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 698 bytes | 349.00 KiB/s, done.
From https://github.com/judahwo/test_
 * branch            master     -> FETCH_HEAD
   81b6e8a..60e5f32  master     -> origin/master
Updating 81b6e8a..60e5f32
Fast-forward
 readme.md | 2 ++
 1 file changed, 2 insertions(+)
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   readme.md

PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit -m "change will conflict"
[master d6109f4] change will conflict
 1 file changed, 2 insertions(+)
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git push
To https://github.com/judahwo/test_.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/judahwo/test_.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git pull origin master
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 750 bytes | 375.00 KiB/s, done.
From https://github.com/judahwo/test_
 * branch            master     -> FETCH_HEAD
   60e5f32..e304054  master     -> origin/master
Auto-merging readme.md
CONFLICT (content): Merge conflict in readme.md
Automatic merge failed; fix conflicts and then commit the result.
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Your branch and 'origin/master' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)

You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   readme.md

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git add .
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git status
On branch master
Your branch and 'origin/master' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)

All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)

Changes to be committed:
        modified:   readme.md

PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit "resolved confilct"
fatal: cannot do a partial commit during a merge.
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git commit -m "resolved conflict"
[master 9bc6bb9] resolved conflict
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git push
Enumerating objects: 10, done.
Counting objects: 100% (10/10), done.
Delta compression using up to 12 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 682 bytes | 682.00 KiB/s, done.
Total 6 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/judahwo/test_.git
   e304054..9bc6bb9  master -> master
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git checkout new
Switched to branch 'new'
PS C:\Users\Marcus\Desktop\Share Folder\test_repo> git push origin new
Enumerating objects: 9, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 12 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (5/5), 553 bytes | 553.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'new' on GitHub by visiting:
remote:      https://github.com/judahwo/test_/pull/new/new
remote:
To https://github.com/judahwo/test_.git
 * [new branch]      new -> new
PS C:\Users\Marcus\Desktop\Share Folder\test_repo>